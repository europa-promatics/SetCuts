{"version":3,"sources":["../../src/pages/barber-list-set-schedule/barber-list-set-schedule.module.ts","../../src/pages/barber-list-set-schedule/barber-list-set-schedule.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACuB;AAavE,IAAa,+BAA+B;IAA5C;IAA8C,CAAC;IAAD,sCAAC;AAAD,CAAC;AAAlC,+BAA+B;IAX3C,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,4FAAyB;SAC1B;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,4FAAyB,CAAC;SACpD;QACD,OAAO,EAAE;YACP,4FAAyB;SAC1B;KACF,CAAC;GACW,+BAA+B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfF;AACe;AACpB;AACa;AACnB;AACI;AACa;AACmB;AAEnE;;;;;GAKG;AAMH,IAAa,yBAAyB;IAQpC,mCAAmB,SAA0B,EAAQ,eAAgC,EAAQ,OAAsB,EAAS,SAAoB,EAAQ,WAA8B,EAAC,IAAU;QAA9K,cAAS,GAAT,SAAS,CAAiB;QAAQ,oBAAe,GAAf,eAAe,CAAiB;QAAQ,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAQ,gBAAW,GAAX,WAAW,CAAmB;IACtL,CAAC;IAED,kDAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC,CAAC;IAC1D,CAAC;IACH,4CAAQ,GAAR;QAAA,iBAqBC;QApBC,IAAK,OAAO,GAAE,YAAY,CAAC,UAAU,CAAC;QACrC,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAC,OAAO,EAAE,gBAAgB,EAAC,CAAC,CAAC;QAC9D,mDAAU,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;aACxC,OAAO,CAAC,cAAI,IAAI,YAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAA/C,CAA+C,CAAC;aAChE,SAAS,CAAC,cAAI;YACb,cAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;gBACrB,KAAI,CAAC,sBAAsB,GAAC,IAAI,CAAC;gBACjC,EAAE,EAAE,KAAI,CAAC,sBAAsB,CAAC,OAAO,IAAE,yBAAyB,CAAC,EAAC;oBACpE,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;oBACzB,KAAI,CAAC,WAAW,GAAC,CAAC,CAAC;gBACrB,CAAC;gBACD,IAAI,EAAC;oBACH,KAAI,CAAC,WAAW,GAAE,KAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC;oBACzD,OAAO,CAAC,GAAG,CAAC,cAAc,GAAC,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC;oBAC7D,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBACzC,CAAC;YACD,CAAC,CAAC;QAXF,CAWE,EACF,eAAK;YACL,cAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,cAAO,CAAC,CAAC;QAAhC,CAAgC,CAC/B,CAAC;IACZ,CAAC;IACD,8CAAU,GAAV,UAAW,SAAS;QACnB,wFAAwF;QACxF,4BAA4B;QAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,EAAC,EAAC,SAAS,EAAC,SAAS,EAAC,CAAC;IAC9D,CAAC;IACD,gCAAC;AAAD,CAAC;AAzCY,yBAAyB;IAJrC,wEAAS,CAAC;QACT,QAAQ,EAAE,+BAA+B;OACG;KAC7C,CAAC;8BASiM;AAiClM;SAzCY,yBAAyB,kB","file":"44.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { BarberListSetSchedulePage } from './barber-list-set-schedule';\n\n@NgModule({\n  declarations: [\n    BarberListSetSchedulePage,\n  ],\n  imports: [\n    IonicPageModule.forChild(BarberListSetSchedulePage),\n  ],\n  exports: [\n    BarberListSetSchedulePage\n  ]\n})\nexport class BarberListSetSchedulePageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/barber-list-set-schedule/barber-list-set-schedule.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { Http } from '@angular/http';\nimport { LoadingController } from 'ionic-angular';\nimport 'rxjs/add/operator/map';\nimport {Observable} from 'rxjs/Rx';\nimport { ModalController } from 'ionic-angular';\nimport {ServicesProvider} from '../../providers/services/services';\n\n/**\n * Generated class for the BarberListSetSchedulePage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage()\n@Component({\n  selector: 'page-barber-list-set-schedule',\n  templateUrl: 'barber-list-set-schedule.html',\n})\nexport class BarberListSetSchedulePage {\nappointment;\nhttp;\nposts;\nno_barber\ndata;\nsalon_barber_list_data\nsalon_barber_data\n  constructor(public modalCtrl: ModalController,public serviceProvider:ServicesProvider,public navCtrl: NavController, public navParams: NavParams,public loadingCtrl: LoadingController,http: Http) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad BarberListSetSchedulePage');\n  }\nngOnInit(){\n  var  salonid= localStorage['salon_id']\n   let loading = this.loadingCtrl.create({content: 'Please wait...'});\n        Observable.fromPromise(loading.present())\n        .flatMap(data => this.serviceProvider.salon_barber_list(salonid))\n        .subscribe(data =>\n          loading.dismiss().then(() =>{ \n            this.salon_barber_list_data=data;\n            if( this.salon_barber_list_data.message==\"No barber in this salon\"){\n            console.log('no barber ')\n            this.appointment=0;\n          }\n          else{\n            this.appointment= this.salon_barber_list_data.barberinfo;\n            console.log(\"barber info \"+JSON.stringify(this.appointment));\n            this.barber_sch(this.appointment[0].id)\n          }\n          }),\n          error =>\n          loading.dismiss().then(() => {})\n          );\n}\nbarber_sch(barber_id){\n // let profileModal = this.modalCtrl.create('BarberSchedulePage',{barber_id:barber_id});\n //   profileModal.present();\n this.navCtrl.push('BarberSchedulePage',{barber_id:barber_id})\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/barber-list-set-schedule/barber-list-set-schedule.ts"],"sourceRoot":""}